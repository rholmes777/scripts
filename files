#!/usr/bin/env bash

# Assign help text to variable for user later
HELP="Usage: files [PATH]"

# Ensure that only a single parameter was passed
# Display help text if more than 1 parameter was supplied
if [ "$#" -ne 1 ]; then
    echo "Error: Incorrect number of parameters; please supply only a valid path"
    echo
    echo $HELP
    echo
    exit 1
fi

# Assign CWD variable to the parameter supplied by the user;
# if no parameter was supplied, use the current working directory
if [ "$#" -eq 0 ]; then
    CWD=$(pwd)
else
    CWD="$1"
fi

# If the user supplied "--help", then provide help text
if [ "$CWD" = "--help" ]; then
    echo $HELP
    echo
    exit 0
fi

# Try to catch special instances
case "$CWD" in
    '.') # User supplies "." to open current directory
        CWD=$(pwd)
        ;;
    '..') # User supplies ".." to open parent directory
        CWD=$(dirname $(pwd))
        ;;
esac

# Check for case where user supplies a subdirectory of the current directory
# (if parameter specified doesn't start with a slash it is assumed to be a
# subdirectory of the current directory)
testchar=$(echo "$CWD" | cut -c 1 -)
if [ ! $testchar = '/' ]; then
    CWD="$(pwd)/$CWD"
fi

# Check that the path supplied as a parameter is valid
if [ ! -d "$CWD" ]; then
    echo "Invalid path specified; please provide a valid path"
    echo
    exit 1
fi

# Debugging
#echo "$CWD"

# Open a file manager window at the specified directory
# Checks for macOS (Darwin) and uses open command;
# otherwise, assumes Linux/GNOME and presence of xdg-open command
if [[ $(uname -a) == *Darwin* ]]; then
    /usr/bin/open "$CWD"
else
    /usr/bin/xdg-open "$CWD" 2>/dev/null 1>/dev/null
fi
